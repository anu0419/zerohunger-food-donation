<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Find Organizations in Chennai</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
  
  <!-- Map libraries -->
  <script src="/js/maps-config.js"></script>
  <script src="/js/openstreetmap-utils.js"></script>
  <script src="/js/ml-services/recommendation-service.js"></script>
  
  <!-- Leaflet CSS and JS for OpenStreetMap -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
  <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
  
  <style>
    #organizations-map {
      height: 500px;
      width: 100%;
      margin: 20px 0;
      border-radius: 8px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }
    .org-list {
      max-height: 400px;
      overflow-y: auto;
      padding: 15px;
      border: 1px solid #eee;
      border-radius: 5px;
    }
    .org-item {
      padding: 10px;
      margin-bottom: 10px;
      border-bottom: 1px solid #eee;
      cursor: pointer;
    }
    .org-item:hover {
      background-color: #f5f5f5;
    }
    .org-item.recommended {
      background-color: #e8f4e8;
      border-left: 4px solid #28a745;
    }
    .recommended-badge {
      background-color: #28a745;
      color: white;
      font-size: 0.7rem;
      padding: 2px 5px;
      border-radius: 3px;
      margin-left: 5px;
      vertical-align: middle;
    }
    body {
      background-image: url("https://static.vecteezy.com/system/resources/previews/001/409/329/original/colorful-organic-geometric-shapes-abstract-background-free-vector.jpg");
      background-size: cover;
      background-repeat: no-repeat;
      background-attachment: fixed;
    }
    .container {
      background-color: white;
      border-radius: 8px;
      padding: 20px;
      margin-top: 80px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }
    .con {
      display: flex;
      align-items: center;
    }
    /* OpenStreetMap marker styles */
    <%= OSM_STYLES %>
  </style>
</head>
<body>
  <nav class="navbar navbar-dark bg-dark fixed-top">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">ZERO HUNGER</a>
      <div class="con">
        <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasDarkNavbar" aria-controls="offcanvasDarkNavbar" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
      </div>

      <div class="offcanvas offcanvas-end text-bg-dark" tabindex="-1" id="offcanvasDarkNavbar" aria-labelledby="offcanvasDarkNavbarLabel">
        <div class="offcanvas-header">
          <h5 class="offcanvas-title" id="offcanvasDarkNavbarLabel">MENU</h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
          <ul class="navbar-nav justify-content-end flex-grow-1 pe-3">
            <li class="nav-item">
              <a class="nav-link active" aria-current="page" href="/don_home">Home</a>
            </li>
            <li class="nav-item">
              <a class="nav-link active" aria-current="page" href="/don_profile">Profile</a>
            </li>
            <li class="nav-item">
              <a class="nav-link active" aria-current="page" href="/don_history">History</a>
            </li>
            <li class="nav-item">
              <a class="nav-link active" aria-current="page" href="#" style="background-color: #666699; padding-left: 20px; border-radius: 5px;">Find Organizations</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/logout">LogOut</a>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </nav>
  
  <div class="container">
    <h2>Find Organizations in Chennai</h2>
    
    <div id="organizations-map"></div>
    
    <div class="row mt-4">
      <div class="col-md-6">
        <h3>Organizations List</h3>
        <p class="recommendation-info" id="recommendation-info">Organizations are listed based on your donation history and location.</p>
        <div class="org-list" id="org-list">
          <!-- Organizations will be loaded here -->
          <p>Loading organizations...</p>
        </div>
      </div>
      <div class="col-md-6">
        <h3>Selected Organization</h3>
        <div id="org-details" class="p-3 border rounded">
          <p>Select an organization to see details</p>
        </div>
      </div>
    </div>
  </div>

  <script>
    let map;
    let markers = [];
    const organizations = <%- JSON.stringify(organizations) %>;
    
    function initMap() {
      try {
        // Initialize OpenStreetMap
        map = L.map('organizations-map').setView([CHENNAI_CENTER.lat, CHENNAI_CENTER.lng], DEFAULT_ZOOM);
        
        // Add the OpenStreetMap tile layer
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
          attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
          maxZoom: 19
        }).addTo(map);
        
        // Add markers for each organization
        displayOrganizations();
      } catch (error) {
        console.error("Error initializing map:", error);
        document.getElementById('organizations-map').innerHTML = '<div class="alert alert-danger">Error loading map. Please refresh the page.</div>';
      }
    }
    
    async function displayOrganizations() {
      const orgList = document.getElementById('org-list');
      orgList.innerHTML = '';
      
      if (!organizations || organizations.length === 0) {
        orgList.innerHTML = '<p>No organizations available.</p>';
        return;
      }
      
      // Try to get recommendations
      let recommendations = [];
      try {
        const response = await fetch('/api/recommended-organizations');
        if (response.ok) {
          recommendations = await response.json();
        }
      } catch (error) {
        console.error('Error fetching recommendations:', error);
      }
      
      // Create a copy of organizations to sort
      const sortedOrgs = [...organizations];
      
      // Sort organizations based on recommendations
      sortedOrgs.sort((a, b) => {
        const aRec = recommendations.find(r => r.name === a.organization_name) || { score: 0 };
        const bRec = recommendations.find(r => r.name === b.organization_name) || { score: 0 };
        return bRec.score - aRec.score;
      });
      
      // Display organizations
      sortedOrgs.forEach((org, index) => {
        // Create a list item for the organization
        const div = document.createElement('div');
        div.className = 'org-item';
        
        // Check if this is a recommended organization
        const rec = recommendations.find(r => r.name === org.organization_name);
        if (rec && rec.score > 0 && index < 3) {
          div.className += ' recommended';
          div.innerHTML = `
            ${org.organization_name} 
            <span class="recommended-badge">Recommended</span>
          `;
        } else {
          div.textContent = org.organization_name;
        }
        
        orgList.appendChild(div);
        
        // Only try to geocode if we have address data
        if (org.street && org.city && org.state) {
          // Geocode the org address
          const address = `${org.street}, ${org.city}, ${org.dist}, ${org.state}, ${org.pincode}`;
          
          // Geocode using Nominatim
          fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address + ', Chennai, Tamil Nadu, India')}`)
            .then(response => response.json())
            .then(data => {
              if (data && data.length > 0) {
                const lat = parseFloat(data[0].lat);
                const lon = parseFloat(data[0].lon);
                
                // Add marker to OpenStreetMap
                const marker = L.marker([lat, lon], {
                  title: org.organization_name,
                  icon: L.divIcon({
                    html: `<div class="org-marker" title="${org.organization_name}"></div>`,
                    className: 'org-marker-container',
                    iconSize: [25, 41],
                    iconAnchor: [12, 41]
                  })
                }).addTo(map);
                
                marker.bindPopup(`<h5>${org.organization_name}</h5><p>${address}</p>`);
                
                marker.on('click', () => {
                  showOrgDetails(org);
                });
                
                markers.push(marker);
                
                // Update click handler for list item
                div.addEventListener('click', () => {
                  map.setView([lat, lon], 15);
                  marker.openPopup();
                  showOrgDetails(org);
                });
              }
            })
            .catch(error => {
              console.error("Error with Nominatim geocoding:", error);
              
              // Still make the list item clickable even if geocoding fails
              div.addEventListener('click', () => {
                showOrgDetails(org);
              });
            });
        } else {
          // If we don't have address data, just make the list item clickable
          div.addEventListener('click', () => {
            showOrgDetails(org);
          });
        }
      });
    }
    
    function showOrgDetails(org) {
      const detailsDiv = document.getElementById('org-details');
      detailsDiv.innerHTML = `
        <h4>${org.organization_name}</h4>
        <p><strong>Contact:</strong> ${org.ph_no || 'Not available'}</p>
        <p><strong>Email:</strong> ${org.email || 'Not available'}</p>
        <p><strong>Address:</strong><br>
        ${org.street || ''},<br>
        ${org.city || ''}, ${org.dist || ''},<br>
        ${org.state || ''} - ${org.pincode || ''}</p>
        <div class="mt-3">
          <a href="/chat/${org.organization_name}" class="btn btn-primary">Chat with Organization</a>
          <a href="/donat_food" class="btn btn-success mt-2">Donate Food</a>
        </div>
      `;
    }
    
    // Initialize map when the page loads
    document.addEventListener('DOMContentLoaded', initMap);
  </script>
</body>
</html>
